in this code red led is ON for first 2 sec and for next two sec blue led is ON and for last 2 sec Green led is On. divided 6 sec for 3 leds.

#include "board.h"
#include "FreeRTOS.h"
#include "task.h"




  static void prvSetupHardware(void)  //setting up the hardwre 
{
	SystemCoreClockUpdate();
	Board_Init();

	
	Board_LED_Set(0, false);

	Board_LED_Set(1, false);
	

	Board_LED_Set(2, false); //initially all the leds are off
}


/* LED1 toggle thread */
   static void vLEDTask0(void *pvParameters) {
	//const TickType_t xDelay250ms = pdMS_TO_TICKS(250);
	//bool LedState = false;

		while (1) {
			Board_LED_Set(0,true);
			vTaskDelay(configTICK_RATE_HZ*2);
			Board_LED_Set(0,false);
			vTaskDelay(configTICK_RATE_HZ*4);// configTICK_RATE_HZ delay is set to 1000 ms means 1 second

		}
    }


/* LED2 toggle thread */
static void vLEDTask1(void *pvParameters) {


	//bool LedState = false;

			while (1) {
				Board_LED_Set(1, false);
				vTaskDelay(configTICK_RATE_HZ*2);
				Board_LED_Set(1, true);
				vTaskDelay(configTICK_RATE_HZ*2);
				Board_LED_Set(1, false);
				vTaskDelay(configTICK_RATE_HZ*2);
			}
}



	

   static void vLEDTask2(void *pvParameters)
   {
	   //bool LedState = false;

	   		while (1) {
	   			Board_LED_Set(2, false);
	   			vTaskDelay(configTICK_RATE_HZ*4);
	   			Board_LED_Set(2, true);
	   			vTaskDelay(configTICK_RATE_HZ*2);

	   			/* About a 3Hz on/off toggle rate */

	   		}
   }


		/*if(configTICK_RATE_HZ/1.5)
						{
						Board_LED_Set(0, false);
						Board_LED_Set(1, false);
						Board_LED_Set(2, LedState);


						}
						else if(configTICK_RATE_HZ)
						{
							Board_LED_Set(0, LedState);
									Board_LED_Set(1, false);
									Board_LED_Set(2, false);
						}*/

		/* About a 7Hz on/off toggle rate */
		 /*set delay as needed*/




 
int main(void)
{
	prvSetupHardware();  //set up the hardware

	/* LED1 toggle thread */
	xTaskCreate(vLEDTask0, (signed char *) "vTaskLed0",
				configMINIMAL_STACK_SIZE, NULL, (tskIDLE_PRIORITY + 3UL),
				(xTaskHandle *) NULL);

	/* LED2 toggle thread */
	xTaskCreate(vLEDTask1, (signed char *) "vTaskLed1",
				configMINIMAL_STACK_SIZE, NULL, (tskIDLE_PRIORITY + 2UL),

				(xTaskHandle *) NULL);

	
	xTaskCreate(vLEDTask2, (signed char *) "vTaskLed2",
				configMINIMAL_STACK_SIZE, NULL, (tskIDLE_PRIORITY + 1UL),
				(xTaskHandle *) NULL);

	vTaskStartScheduler();  //started the schedular to schedule 3 leds

	/* Should never arrive here */
	return 1;
}
